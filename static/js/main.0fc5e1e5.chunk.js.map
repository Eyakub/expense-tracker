{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fc5e1e5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2>\r\n      Expense Tracker\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default Header","export default (state, action) => {\r\n  switch(action.type){\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions:state.transactions.filter(transaction => transaction.id !== action.payload)\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, {createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n// initial state\r\nconst initialState = {\r\n  transactions: []\r\n}\r\n\r\n// create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({children}) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  function deleteTransaction(id){\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction){\r\n    dispatch({\r\n      type:'ADD_TRANSACTION',\r\n      payload: transaction\r\n    })\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions:state.transactions,\r\n    deleteTransaction,\r\n    addTransaction,\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n  const {transactions} = useContext(GlobalContext)\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <div>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Balance","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">{expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React,{useContext} from \"react\";\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const Transaction = ({transaction}) => {\r\n  const {deleteTransaction} = useContext(GlobalContext)\r\n  const sign = transaction.amount < 0 ? '-': '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus': 'plus'}>\r\n      {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n      <button onClick={()=> deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport {Transaction} from './Transaction';\r\n\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map(transaction => (\r\n          (<Transaction key={transaction.id} transaction={transaction} />)\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, {useState, useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const {addTransaction} = useContext(GlobalContext);\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 1000000),\r\n      text,\r\n      amount: +amount //type cast to number\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Add new Transaction</h3>\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"text\">Text</label>\r\n            <input type=\"text\" value={text} \r\n              onChange={(e)=>setText(e.target.value)} placeholder=\"Enter text...\" />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\">Amount <br/>\r\n              (negative - expense, positive - income)\r\n            </label>\r\n            <input type=\"number\" value={amount}\r\n              onChange={(e)=>setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n          </div>\r\n          <button className=\"btn\">Add transaction</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTransaction","import React from 'react';\r\nimport Header from './components/Header';\r\nimport Balance from './components/Balance';\r\nimport IncomeExpenses from './components/IncomeExpenses';\r\nimport TransactionList from './components/TransactionList';\r\nimport AddTransaction from './components/AddTransaction';\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header></Header>\r\n      <div className=\"container\">\r\n        <Balance/>\r\n        <IncomeExpenses/>\r\n        <TransactionList></TransactionList>\r\n        <AddTransaction></AddTransaction>\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}